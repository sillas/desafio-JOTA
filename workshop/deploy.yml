Transform: AWS::Serverless-2016-10-31

Parameters:
  Owner:
    Type: String
    Default: Juser
    Description: 'Owner name'
  
  Project:
    Type: String
    Default: JNewsClassifier
    Description: 'Project name'

  Environment:
    Type: String
    Default: Dev
    AllowedValues: [Dev, Staging, Prod]
    Description: 'Environment name'
  
  RetentionDays:
    Type: Number
    Default: 5
    MinValue: 1
    MaxValue: 365
    Description: 'Log retention in days'

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${AWS::StackName}
        - ResourceName: Api
      StageName: !Ref Environment
      DefinitionBody:
        openapi: '3.0.1'
        info: 
          description: "Created by Me"
          version: "2025-07-14T10:44:15Z"
          title: "webhook"
        paths:
          /webhook:
            post:
              x-amazon-apigateway-integration:
                payloadFormatVersion: '2.0'
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LbdValidation.Arn}/invocations
              responses: 
                '200':
                  description: 'Success'
      EndpointConfiguration:
        Type: REGIONAL
      Tags:
        Environment: !Ref Environment
        Project: !Ref Project
        Owner: !Ref Owner

  LbdValidation:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: LbdValidation
      CodeUri: ../src/lambdas/validation
      Handler: index.handler
      Runtime: python3.13
      Layers:
          - !Sub arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV3-python313-arm64:19
      MemorySize: 128
      Timeout: 10
      ReservedConcurrentExecutions: 2
      Events:
        ApiPOSTwebhook:
          Type: Api
          Properties:
            Path: /webhook
            Method: POST
            RestApiId: !Ref Api
      Environment:
        Variables:
          QUEUE_URL: !Ref Queue
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: sqs:SendMessage
              Resource: !GetAtt Queue.Arn
      Architectures:
        - arm64
      Tags:
        Environment: !Ref Environment
        Project: !Ref Project
        Owner: !Ref Owner

  LbdValidationLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${LbdValidation}
      RetentionInDays: !Ref RetentionDays
  
  LbdClassification:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: LbdClassification
      CodeUri: ../src/lambdas/classification
      Handler: index.handler
      Runtime: python3.13
      Layers:
          - !Sub arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV3-python313-arm64:19
      MemorySize: 128
      Timeout: 10
      ReservedConcurrentExecutions: 2
      Events:
        Queue:
          Type: SQS
          Properties:
            Queue: !GetAtt Queue.Arn
            BatchSize: 10
            MaximumBatchingWindowInSeconds: 30
            ScalingConfig:
              MaximumConcurrency: 2
      Environment:
        Variables:
          TABLE_NAME: !Ref NewsDataTable
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !GetAtt NewsDataTable.Arn
      Architectures:
        - arm64
      Tags:
        Environment: !Ref Environment
        Project: !Ref Project
        Owner: !Ref Owner

  LbdClassificationLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${LbdClassification}
      RetentionInDays: !Ref RetentionDays
  
  NewsDataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: 'N'
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner

  Queue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 345600
      ReceiveMessageWaitTimeSeconds: 20
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Dev"
    Export:
      Name: !Sub "${AWS::StackName}-ApiEndpoint"
  
  QueueUrl:
    Description: SQS Queue URL
    Value: !Ref Queue
    Export:
      Name: !Sub "${AWS::StackName}-QueueUrl"