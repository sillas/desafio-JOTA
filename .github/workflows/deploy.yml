name: Deploy CloutFormation

on:
  push:
    branches:
      - main-deploy
    paths:
      - 'src/**'
      - cloud_formation_deploy.yml

permissions:
  contents: read

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install numpy for Lambda layer
        run: |
          mkdir python
          pip install -t python numpy --platform manylinux2014_aarch64 --only-binary=:all:
          cd python
          rm -rf *dist-info
          cd ..
          zip -r numpy_layer.zip python
          mkdir -p src/layers
          mv numpy_layer.zip src/layers
          rm -rf python

      - name: Prepare Spacy model
        env:
          M_NAME: pt_core_news_sm
          M_VERSON: 3.8.0   
          GITHUB_REPO: https://github.com/explosion/spacy-models/releases/download/
        run: |
          mkdir work_dir
          cp ./fragm/${M_NAME}-dist-info.zip ./work_dir
          cd work_dir
          unzip ./${M_NAME}-dist-info.zip
          curl -L -o ${M_NAME}.tar.gz ${GITHUB_REPO}${M_NAME}-${M_VERSON}/${M_NAME}-${M_VERSON}.tar.gz
          tar -xzf ${M_NAME}.tar.gz
          zip -r ${M_NAME}.zip ${M_NAME}-${M_VERSON}.dist-info ${M_NAME}-${M_VERSON}/${M_NAME}
          cd ..
          mkdir -p models
          mv work_dir/${M_NAME}.zip models/
          rm -rf work_dir

      - name: Set up SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: SAM Build
        run: |
          sam build --template cloud_formation_deploy.yml
      
      - name: SAM Deploy
        if: success()
        run: |
          sam deploy \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --capabilities CAPABILITY_IAM
      
      - name: Get S3 Bucket Name from Output
        if: success()
        id: get-bucket
        run: |
          BUCKET_NAME=$(aws cloudformation describe-stacks \
            --stack-name classification-app \
            --query "Stacks[0].Outputs[?OutputKey=='NomeDoBucketS3'].OutputValue" \
            --output text)
          echo "bucket_name=$BUCKET_NAME" >> "$GITHUB_OUTPUT"
      
      - deploy_model_to_s3:
        if: success()
        env:
          S3_BUCKET: ${{ steps.get-bucket.outputs.bucket_name }}
        run: |
          cd models
          aws s3 cp pt_core_news_sm.zip s3://${S3_BUCKET}/spacy_model
      


      - name: Show deployment info
        if: success()
        run: |
          echo "Deployment completed successfully!"
      
      
